{"version":3,"sources":["components/DeliveryPersonel.jsx","components/Client.jsx","App.jsx","index.js"],"names":["LongPollingQuery","gql","DPHomeScreen","genericData","useQuery","variables","deliveryPersonelId","pollInterval","loading","error","data","stopPolling","message","acceptOrderForDelivery","customerName","console","log","JSON","stringify","CHomeScreen","App","exact","path","render","Client","DeliveryPersonel","client","ApolloClient","uri","ReactDOM","document","getElementById"],"mappings":"wfAMA,IAAMA,EAAmBC,YAAH,KAkCPC,EA1BM,WACpB,IAAMC,EAAW,yCADS,EAEoBC,YAASJ,EAAkB,CACxEK,UAAW,CACVC,mBAAoB,4BAClBC,aAAc,MAHVC,EAFkB,EAElBA,QAASC,EAFS,EAETA,MAAOC,EAFE,EAEFA,KAAMC,EAFJ,EAEIA,YAM9B,OAAIH,EAAgB,6CACXC,GACRE,IACO,gDAAsBF,EAAMG,UAEA,OAAhCF,EAAKG,wBAAmCH,EAAKG,uBAAuBC,cACvEH,IACAI,QAAQC,IAAIN,EAAMD,GACX,6BACNN,EAAc,SACdc,KAAKC,UAAUR,EAAKG,2BAGrBE,QAAQC,IAAIN,EAAMD,GACX,6BAAMN,EAAY,6BAAlB,4BC9BMgB,EAJK,WACnB,OAAO,wCCaOC,MATf,WACC,OACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,OAAQ,kBAAM,kBAACC,EAAD,SAC1C,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,YAAYC,OAAQ,kBAAM,kBAACE,EAAD,W,eCEzCC,EAAS,IAAIC,IAAa,CAC/BC,IAAK,kDAGNC,IAASN,OACR,kBAAC,IAAD,CAAgBG,OAAQA,GACvB,kBAAC,IAAD,KACC,kBAAC,EAAD,QAGDI,SAASC,eAAe,W","file":"static/js/main.94d72f15.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { gql } from \"apollo-boost\";\n\nimport { useQuery } from \"@apollo/react-hooks\";\n\nconst LongPollingQuery = gql`\n\tquery acceptDelivery($deliveryPersonelId: ID!){\n\t\tacceptOrderForDelivery(deliveryPersonelId: $deliveryPersonelId) {\n\t\t\tcustomerName, customerNumber, price, quantity, id\n\t\t}\n\t}\n`;\n\nconst DPHomeScreen = () => {\n\tconst genericData = `Name: Dhruvil Shah, Number: 8850392965`;\n\tconst { loading, error, data, stopPolling } = useQuery(LongPollingQuery, {\n\t\tvariables: {\n\t\t\tdeliveryPersonelId: \"5e654b57b1256b0017e6af57\"\n\t\t}, pollInterval: 5000\n\t});\n\n\tif (loading) return <div>Loading.....</div>\n\telse if (error) {\n\t\tstopPolling();\n\t\treturn <div>Error occured : {error.message}</div>\n\t}\n\tif (data.acceptOrderForDelivery !== null && data.acceptOrderForDelivery.customerName) {\n\t\tstopPolling();\n\t\tconsole.log(data, error)\n\t\treturn <div>{\n\t\t\tgenericData + \"<br />\" +\n\t\t\tJSON.stringify(data.acceptOrderForDelivery)\n\t\t}</div>\n\t} else {\n\t\tconsole.log(data, error);\n\t\treturn <div>{genericData}<br />Waiting for Orders....</div>\n\t}\n}\n\nexport default DPHomeScreen;","import React from \"react\";\n\nconst CHomeScreen = () => {\n\treturn <div>Client</div>;\n}\n\nexport default CHomeScreen;","import React from 'react';\n\nimport {Switch, Route} from \"react-router-dom\";\n\nimport DeliveryPersonel from \"./components/DeliveryPersonel\"\nimport Client from \"./components/Client\";\n\nfunction App() {\n\treturn (\n\t\t<Switch>\n\t\t\t<Route exact path=\"/client\" render={() => <Client />} />\n\t\t\t<Route exact path=\"/delivery\" render={() => <DeliveryPersonel />} />\n\t\t</Switch>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {\n\tHashRouter as Router\n} from \"react-router-dom\";\nimport ApolloClient from 'apollo-boost';\n\nimport {\n\tApolloProvider\n} from '@apollo/react-hooks';\n\nconst client = new ApolloClient({\n\turi: \"https://cookieman98.herokuapp.com/api/graphql\"\n})\n\nReactDOM.render( \n\t<ApolloProvider client={client}>\n\t\t<Router>\n\t\t\t<App />\n\t\t</Router>\n\t</ApolloProvider>\n, document.getElementById('root'));"],"sourceRoot":""}